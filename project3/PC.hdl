// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/a/PC.hdl
/**
 * A 16-bit counter.
 * if      reset(t): out(t+1) = 0
 * else if load(t):  out(t+1) = in(t)
 * else if inc(t):   out(t+1) = out(t) + 1
 * else              out(t+1) = out(t)
 */
CHIP PC {
    IN in[16], reset, load, inc;
    OUT out[16];
    
    PARTS:
    // Right Order: Increment + Load + Reset + Store
    // calculate increment on top of register out value
    Inc16(in=regout , out=regoutinc );
    Mux16(a=regout , b=regoutinc , sel=inc , out=outinc );

    // Load: Select either outpcinc or in based on load
    Mux16(a=outinc , b=in , sel=load , out=outload );

    // Reset: Select either outload or 0 based on reset
    Mux16(a=outload , b=false , sel=reset , out=outreset );

    //Wrong order: Increment+Reset+Load+Store
    //Mux16(a=outinc , b=false , sel=reset , out=outreset );
    //Mux16(a=outreset , b=in , sel=load , out=outload );
    //Register(in=outload, load=true, out=out, out=regout);

    // Load value into register
    Register(in=outreset, load=true, out=out, out=regout);
}